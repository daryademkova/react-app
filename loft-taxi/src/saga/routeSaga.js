import { takeEvery, call, put } from 'redux-saga/effects';
import { setRoute, GET_ROUTE } from '../actions'
import { serverGetRoute } from '../api';
import { toast } from 'react-toastify';

export function* getRouteSaga(action) {
    const {address1, address2} = action.payload;
    try {
        const data = yield call(serverGetRoute, address1, address2)
        if (data) {
            yield put(setRoute(data))
            toast('ü¶Ñ –ú–∞—Ä—à—Ä—É—Ç –ø—Ä–æ–ª–æ–∂–µ–Ω!');
        } else {
            toast.warn('ü§∑üèΩ‚Äç‚ôÇÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã!');
            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã');
        }
    } catch(error) {
        toast.error('üÜò –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞!');
        console.log('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞', error);
    }
}

export function* routeSaga() {
    yield takeEvery(GET_ROUTE, getRouteSaga)
} 